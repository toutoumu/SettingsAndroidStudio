<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="566" />
    <option name="newTranslationDialogY" value="382" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="task State" />
      <item value="DROP OLDEST" />
      <item value="&lt;a href=&quot;https:material.iocomponentscheckboxes&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Material Design checkbox&lt;a&gt;. Checkboxes allow users to select one or more items from a set. Checkboxes can turn an option on or off. ![Checkboxes image](https:developer.android.comimagesreferenceandroidxcomposematerialcheckboxes.png) @sample androidx.compose.material.samples.CheckboxSample @see [TriStateCheckbox] if you require support for an indeterminate state, or more advanced color customization between states. @param checked whether Checkbox is checked or unchecked @param onCheckedChange callback to be invoked when checkbox is being clicked, therefore the change of checked state in requested. If null, then this is passive and relies entirely on a higher-level component to control the &quot;checked&quot; state. @param modifier Modifier to be applied to the layout of the checkbox @param enabled whether the component is enabled or grayed out @param interactionSource the [MutableInteractionSource] representing the stream of [Interaction]s for this Checkbox. You can create and pass in your own remembered [MutableInteractionSource] if you want to observe [Interaction]s and customize the appearance behavior of this Checkbox in different [Interaction]s. @param colors [CheckboxColors] that will be used to determine the color of the checkmark box border in different states. See [CheckboxDefaults.colors]." />
      <item value="performance" />
      <item value="性能" />
      <item value="质量" />
      <item value="Qulity" />
      <item value="特殊" />
      <item value="Speacial要求" />
      <item value="Speacial" />
      <item value="priority" />
      <item value="VISIBILITY SECRET" />
      <item value="CALL STATE RINGING" />
      <item value="整机扫码过站" />
      <item value="A material design back button." />
      <item value="prevent Duplicates" />
      <item value="obscure Text" />
      <item value="shrink Wrap" />
      <item value="Constrained Box" />
      <item value="Clamping Scroll Physics" />
      <item value="growable" />
      <item value="- [permanent] keeps the Instance in memory and persist it, not following `Get.smartManagement` rules. Although, can be removed by `GetInstance.reset()` and `Get.delete()`" />
      <item value="- [permanent] keeps the Instance in memory and persist it," />
      <item value="permanent" />
      <item value="- [tag] optionally, use a [tag] as an &quot;id&quot; to create multiple records of the same `Type&lt;S&gt;` the [tag] does not conflict with the same tags used by other dependencies Types." />
      <item value="conflict" />
      <item value="No need to define the generic type `&lt;[S]&gt;` as it's inferred from the [dependency] parameter." />
      <item value="Injects" />
      <item value="associated" />
      <item value="Tween Spec" />
      <item value="va Window Compat" />
      <item value="navigation Bar Divider Color" />
      <item value="An insets type representing any system bars for displaying status." />
      <item value="TYPE APPLICATION PANEL" />
      <item value="window Is Translucent" />
      <item value="shrink Towards" />
      <item value="shrink Out" />
      <item value="coerce In" />
      <item value="For the [WindowInsetsCompat.Type.ime]. On [Build.VERSION_CODES.R] and above, the soft keyboard can be detected and [ime] will animate when it shows. Developers should set `android:windowSoftInputMode=&quot;adjustResize&quot;` in their `AndroidManifest.xml` file and call `WindowCompat.setDecorFitsSystemWindows(window, false)` in their [android.app.Activity.onCreate]." />
      <item value="state Hidden" />
      <item value="reverse Layout" />
      <item value="Coroutines" />
      <item value="PREFER SETTINGS" />
      <item value="FAIL ON PROJECT REPOS" />
      <item value="SUBSAMPLING" />
      <item value="ACCESS LOCATION EXTRA COMMANDS" />
      <item value="Langurage" />
      <item value="start Time Us" />
      <item value="send Next When Last Success" />
      <item value="interval Between Two Package" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1001" />
        <entry key="ENGLISH" value="1002" />
        <entry key="ESTONIAN" value="1" />
        <entry key="ICELANDIC" value="2" />
        <entry key="BOSNIAN" value="1" />
        <entry key="AFRIKAANS" value="1" />
        <entry key="DANISH" value="4" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="1" />
        <entry key="BENGALI" value="2" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1662013376412" />
  </component>
</application>