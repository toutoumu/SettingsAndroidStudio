<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="566" />
    <option name="newTranslationDialogY" value="382" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="bonded" />
      <item value="Closes and releases resources. This method will be called automatically after calling {@link disconnect()}. When the device disconnected with link loss and {@link ConnectRequestshouldAutoConnect()} returned true you have to call this method to close the connection." />
      <item value="begin Atomic Request Queue" />
      <item value="This method should nullify all services and characteristics of the device. &lt;p&gt; It's called when the device is no longer connected, either due to user action or a link loss, or when the services have changed and new service discovery will be performed." />
      <item value="on Services Invalidated" />
      <item value="Connects with a Bluetooth LE GATT service and takes care of its notifications. The service runs as a foreground service, which is generally required so that it can run even while the containing app has no UI. It is also possible to have the service started up as part of the OS boot sequence using code similar to the following: &lt;pre&gt; class OsNotificationReceiver : BroadcastReceiver() { override fun onReceive(context: Context?, intent: Intent?) { when (intent?.action) { Start our Gatt service as a result of the system booting up Intent.ACTION_BOOT_COMPLETED -&gt; { context?.startForegroundService(Intent(context, GattService::class.java)) } } } } &lt;pre&gt;" />
      <item value="Copyright (c) 2020, Nordic Semiconductor All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation andor other materials provided with the distribution. 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." />
      <item value="PLANE" />
      <item value="convert Ble Device" />
      <item value="request Connection Priority" />
      <item value="temp" />
      <item value="Host\n Certification" />
      <item value="Preferred" />
      <item value="set Preferred Orientations" />
      <item value="The snapping position aligns at the top part of the grabbing content" />
      <item value="When given a scroll controller that is attached to scrollable view, e.g [ListView] or a [SingleChildScrollView], the sheet will naturally grow and shrink according to the current scroll position of that view. OBS, the scrollable view needs to have the [reverse] parameter set to false if located in the below sheet and true if located in the above sheet. Otherwise, the logic do not behave as intended." />
      <item value="The snapping position alignment regarding the grabbing content. This is often used when you want a snapping position at the top or bottom of the screen, but want the entire grabbing widget to be visible. For example, if you have a snapping position at the top of the screen, you usually use [GrabbingContentOffset.bottom]. See example: ```dart SnappingPosition.factor( positionFactor: 1.0, grabbingContentOffset: GrabbingContentOffset.bottom, ), ``` Or if you have a snapping position at the bottom of the screen, you usually use [GrabbingContentOffset.bottom]. See example: ```dart SnappingPosition.factor( positionFactor: 0.0, grabbingContentOffset: GrabbingContentOffset.top, ), ```" />
      <item value="grabbing" />
      <item value="snappint" />
      <item value="latitude" />
      <item value="lowering" />
      <item value="Whether to consume any [WindowInsetsCompat]s which are dispatched to the host view. Defaults to `true`." />
      <item value="With Out" />
      <item value="display Cutout" />
      <item value="ime" />
      <item value="Applies any [WindowInsetsCompat] values to [LocalWindowInsets], which are then available within [content]. If you're using this in fragments, you may wish to take a look at [ViewWindowInsetObserver] for a more optimal solution. @param windowInsetsAnimationsEnabled Whether to listen for [WindowInsetsAnimation]s, such as IME animations. @param consumeWindowInsets Whether to consume any [WindowInsetsCompat]s which are dispatched to the host view. Defaults to `true`." />
      <item value="Obsolete Sdk Int" />
      <item value="variant" />
      <item value="语言" />
      <item value="泰语" />
      <item value="GERMAN" />
      <item value="GERMANY" />
      <item value="ITALIAN" />
      <item value="JAPANESE" />
      <item value="KOREA" />
      <item value="KOREAN" />
      <item value="TRADITIONAL CHINESE" />
      <item value="Returns a new persistent list with the specified element inserted at the specified index." />
      <item value="parallax" />
      <item value="protocol" />
      <item value="INTERNET" />
      <item value="AUTHENTICATION AGENT ERROR" />
      <item value="Wildcards" />
      <item value="Provide a Key used for the initial load for the next PagingSource due to invalidation of this PagingSource. The Key is provided to load via LoadParams.key. The Key returned by this method should cause load to load enough items to fill the viewport around the last accessed position, allowing the next generation to transparently animate in. The last accessed position can be retrieved via state.anchorPosition, which is typically the top-most or bottom-most item in the viewport due to access being triggered by binding items as they scroll into view. For example, if items are loaded based on integer position keys, you can return state.anchorPosition. Alternately, if items contain a key used to load, get the key from the item in the page at index state.anchorPosition. Params: state - PagingState of the currently fetched data, which includes the most recently accessed position in the list via PagingState.anchorPosition. Returns: Key passed to load after invalidation used for initial load of the next generation. The Key returned by getRefreshKey should load pages centered around user's current viewport. If the correct Key cannot be determined, null can be returned to allow load decide what default key to use." />
      <item value="reverse Layout" />
      <item value="typography" />
      <item value="总是" />
      <item value="On every successful composition, update the callback with the `enabled` value" />
      <item value="propagate Min Constraints" />
      <item value="合作" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="952" />
        <entry key="ENGLISH" value="953" />
        <entry key="ESTONIAN" value="1" />
        <entry key="BOSNIAN" value="1" />
        <entry key="AFRIKAANS" value="1" />
        <entry key="DANISH" value="4" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="1" />
        <entry key="BENGALI" value="2" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1648780430490" />
  </component>
</application>